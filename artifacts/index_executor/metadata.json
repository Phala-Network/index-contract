{
  "source": {
    "hash": "0x74ffd5230ff74ca6f80757a6d9773f975f035845e48cd18bcede22d0474722bf",
    "language": "ink! 3.4.0",
    "compiler": "rustc 1.67.0-nightly"
  },
  "contract": {
    "name": "index_executor",
    "version": "0.1.0",
    "authors": [
      "Phala Network"
    ],
    "repository": "https://github.com/Phala-Network/index-contract",
    "homepage": "https://phala.network/",
    "license": "Apache 2.0"
  },
  "V3": {
    "spec": {
      "constructors": [
        {
          "args": [],
          "docs": [
            "Create an Executor entity"
          ],
          "label": "new",
          "payable": false,
          "selector": "0x9bae9d5e"
        }
      ],
      "docs": [],
      "events": [],
      "messages": [
        {
          "args": [
            {
              "label": "registry",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 0
              }
            }
          ],
          "docs": [
            " Create an Executor entity"
          ],
          "label": "set_registry",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 4
          },
          "selector": "0xa55c4b84"
        },
        {
          "args": [],
          "docs": [
            " For cross-contract call test"
          ],
          "label": "get_graph",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 7
          },
          "selector": "0x2db369c5"
        },
        {
          "args": [],
          "docs": [
            " Return executor account information"
          ],
          "label": "get_executor_account",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "AccountInfo"
            ],
            "type": 19
          },
          "selector": "0xa0d3b7a4"
        },
        {
          "args": [],
          "docs": [
            " Return worker accounts information"
          ],
          "label": "get_worker_account",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Vec"
            ],
            "type": 21
          },
          "selector": "0x8ca93a80"
        },
        {
          "args": [],
          "docs": [
            " Claim and execute tasks from all supported blockchains. This is a query operation",
            " that scheduler invokes periodically.",
            "",
            "",
            " 1) Perform spcific operations for the runing tasks according to current status.",
            " 2) Fetch new actived tasks from supported chains and append them to the local runing tasks queue.",
            ""
          ],
          "label": "execute",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 4
          },
          "selector": "0xd00ec894"
        }
      ]
    },
    "storage": {
      "struct": {
        "fields": [
          {
            "layout": {
              "cell": {
                "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "ty": 0
              }
            },
            "name": "admin"
          },
          {
            "layout": {
              "enum": {
                "dispatchKey": "0x0100000000000000000000000000000000000000000000000000000000000000",
                "variants": {
                  "0": {
                    "fields": [
                      {
                        "layout": {
                          "struct": {
                            "fields": [
                              {
                                "layout": {
                                  "struct": {
                                    "fields": [
                                      {
                                        "layout": {
                                          "cell": {
                                            "key": "0x0200000000000000000000000000000000000000000000000000000000000000",
                                            "ty": 0
                                          }
                                        },
                                        "name": "account_id"
                                      }
                                    ]
                                  }
                                },
                                "name": "inner"
                              }
                            ]
                          }
                        },
                        "name": null
                      }
                    ]
                  },
                  "1": {
                    "fields": []
                  }
                }
              }
            },
            "name": "registry"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0200000000000000000000000000000000000000000000000000000000000000",
                "ty": 3
              }
            },
            "name": "worker_accounts"
          },
          {
            "layout": {
              "array": {
                "cellsPerElem": 1,
                "layout": {
                  "cell": {
                    "key": "0x2300000000000000000000000000000000000000000000000000000000000000",
                    "ty": 2
                  }
                },
                "len": 32,
                "offset": "0x0300000000000000000000000000000000000000000000000000000000000000"
              }
            },
            "name": "executor_account"
          }
        ]
      }
    },
    "types": [
      {
        "id": 0,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 1,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_env",
            "types",
            "AccountId"
          ]
        }
      },
      {
        "id": 1,
        "type": {
          "def": {
            "array": {
              "len": 32,
              "type": 2
            }
          }
        }
      },
      {
        "id": 2,
        "type": {
          "def": {
            "primitive": "u8"
          }
        }
      },
      {
        "id": 3,
        "type": {
          "def": {
            "sequence": {
              "type": 1
            }
          }
        }
      },
      {
        "id": 4,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 5
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 6
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 5
            },
            {
              "name": "E",
              "type": 6
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 5,
        "type": {
          "def": {
            "tuple": []
          }
        }
      },
      {
        "id": 6,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "ReadCacheFailed"
                },
                {
                  "index": 1,
                  "name": "WriteCacheFailed"
                },
                {
                  "index": 2,
                  "name": "DecodeCacheFailed"
                },
                {
                  "index": 3,
                  "name": "ExecuteFailed"
                },
                {
                  "index": 4,
                  "name": "Unimplemented"
                }
              ]
            }
          },
          "path": [
            "index_executor",
            "index_executor",
            "Error"
          ]
        }
      },
      {
        "id": 7,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 8
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 6
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 8
            },
            {
              "name": "E",
              "type": 6
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 8,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "assets",
                  "type": 9,
                  "typeName": "Vec<AssetGraph>"
                },
                {
                  "name": "pairs",
                  "type": 13,
                  "typeName": "Vec<TradingPairGraph>"
                },
                {
                  "name": "bridges",
                  "type": 15,
                  "typeName": "Vec<BridgeGraph>"
                }
              ]
            }
          },
          "path": [
            "index_registry",
            "types",
            "Graph"
          ]
        }
      },
      {
        "id": 9,
        "type": {
          "def": {
            "sequence": {
              "type": 10
            }
          }
        }
      },
      {
        "id": 10,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "chain",
                  "type": 11,
                  "typeName": "String"
                },
                {
                  "name": "location",
                  "type": 12,
                  "typeName": "Vec<u8>"
                },
                {
                  "name": "name",
                  "type": 11,
                  "typeName": "String"
                },
                {
                  "name": "symbol",
                  "type": 11,
                  "typeName": "String"
                },
                {
                  "name": "decimals",
                  "type": 2,
                  "typeName": "u8"
                }
              ]
            }
          },
          "path": [
            "index_registry",
            "types",
            "AssetGraph"
          ]
        }
      },
      {
        "id": 11,
        "type": {
          "def": {
            "primitive": "str"
          }
        }
      },
      {
        "id": 12,
        "type": {
          "def": {
            "sequence": {
              "type": 2
            }
          }
        }
      },
      {
        "id": 13,
        "type": {
          "def": {
            "sequence": {
              "type": 14
            }
          }
        }
      },
      {
        "id": 14,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "id",
                  "type": 12,
                  "typeName": "Vec<u8>"
                },
                {
                  "name": "asset0",
                  "type": 11,
                  "typeName": "String"
                },
                {
                  "name": "asset1",
                  "type": 11,
                  "typeName": "String"
                },
                {
                  "name": "dex",
                  "type": 11,
                  "typeName": "String"
                },
                {
                  "name": "chain",
                  "type": 11,
                  "typeName": "String"
                }
              ]
            }
          },
          "path": [
            "index_registry",
            "types",
            "TradingPairGraph"
          ]
        }
      },
      {
        "id": 15,
        "type": {
          "def": {
            "sequence": {
              "type": 16
            }
          }
        }
      },
      {
        "id": 16,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "chain0",
                  "type": 11,
                  "typeName": "String"
                },
                {
                  "name": "chain1",
                  "type": 11,
                  "typeName": "String"
                },
                {
                  "name": "assets",
                  "type": 17,
                  "typeName": "Vec<(String, String)>"
                }
              ]
            }
          },
          "path": [
            "index_registry",
            "types",
            "BridgeGraph"
          ]
        }
      },
      {
        "id": 17,
        "type": {
          "def": {
            "sequence": {
              "type": 18
            }
          }
        }
      },
      {
        "id": 18,
        "type": {
          "def": {
            "tuple": [
              11,
              11
            ]
          }
        }
      },
      {
        "id": 19,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "account32",
                  "type": 1,
                  "typeName": "[u8; 32]"
                },
                {
                  "name": "account20",
                  "type": 20,
                  "typeName": "[u8; 20]"
                }
              ]
            }
          },
          "path": [
            "index_executor",
            "index_executor",
            "AccountInfo"
          ]
        }
      },
      {
        "id": 20,
        "type": {
          "def": {
            "array": {
              "len": 20,
              "type": 2
            }
          }
        }
      },
      {
        "id": 21,
        "type": {
          "def": {
            "sequence": {
              "type": 19
            }
          }
        }
      }
    ]
  }
}